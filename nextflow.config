/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    phac-nml/LegioVue Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {
    // Required Input fastq options (Pick 1)
    input                       = null
    fastq_dir                   = null

    // Input data filtering based on testing
    min_abundance_percent       = 10
    min_reads                   = 60000

    // Kraken + Braken
    //  Link to AWS, if connection is lost or not available user needs to pass
    //  own database path
    kraken2_db                  = null

    // Quast and quality scoring based on testing
    quast_ref                   = "$projectDir/data/C9_S.reference.fna"
    max_contigs                 = 100
    min_align_percent           = 75
    min_reads_warn              = 150000
    min_n50_score               = 80000
    max_n50_score               = 220000

    // El_Gato
    skip_el_gato                = false
    skip_plotting               = false

    // ChewBBACA cgMLST params
    prepped_schema              = "$projectDir/data/SeqSphere_1521_schema"
    schema_targets              = null

    // MultiQC
    multiqc_config = "$projectDir/assets/multiqc_config.yaml"

    // Metadata -- To add with clustering later
    //  Or maybe can add to join to final output file?
    // metadata                    = ""

    // Generic boilerplate options
    outdir                      = null
    publish_dir_mode            = 'copy'
    help                        = false
    version                     = false
    trace_report_suffix         = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
}

// Load base.config by default for all pipelines
//  This has all the resource allocation/tags
includeConfig 'conf/base.config'

// Load modules.config for DSL2 module specific options
//  ToDoMaybeEventually - Convert more process args to the modules config
includeConfig 'conf/modules.config'

// IRIDA-Next config
includeConfig 'conf/iridanext.config'

// Profiles
profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    cleanup {
        cleanup                 = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.Gb,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }

    // Test profiles and internal profile
    test_full   { includeConfig 'conf/test_full.config' }
    test        { includeConfig 'conf/test.config'      }
    nml         { includeConfig 'conf/nml.config'       }
}

// Override the default Docker registry when required
process.ext.override_configured_container_registry = true

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Nextflow plugins and settings
plugins {
    id 'nf-schema@2.2.1'
    id 'nf-iridanext@0.3.0'
    id 'nf-prov@1.2.4'
}
validation {
    help {
        enabled = true
        command = "nextflow run phac-nml/legiovue -p <profile> --input samplesheet.csv --outdir results --kraken2_db /PATH/TO/DB"
    }
}
prov {
    enabled = true
    formats {
        legacy {
            file = "${params.outdir}/pipeline_info/manifest.json"
            overwrite = true
        }
    }
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.
env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

// Nextflow execution reports
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

// Manifest information
manifest {
    name            = "phac-nml/legiovue"
    author          = """Darian Hole, Molly Pratt, Jennifer Tanner"""
    contributors    = [
        [
            name: 'Darian Hole',
            affiliation: 'Public Health Agency of Canada',
            email: 'darian.hole@phac-aspc.gc.ca',
            github: 'darianhole',
            contribution: ['author'],
            orcid: ''
        ],
        [
            name: 'Molly Pratt',
            affiliation: 'Public Health Agency of Canada',
            email: 'molly.pratt@phac-aspc.gc.ca',
            github: '',
            contribution: ['author'],
            orcid: ''
        ],
        [
            name: 'Jennifer Tanner',
            affiliation: 'Public Health Agency of Canada',
            email: 'jennifer.tanner@phac-aspc.gc.ca',
            github: '',
            contribution: ['author'],
            orcid: ''
        ]
    ]
    homePage        = """https://github.com/phac-nml/legiovue"""
    description     = """Legionella pneumophila WGS analysis"""
    mainScript      = "main.nf"
    nextflowVersion = "!>=24.04.1"
    version         = "0.3.0"
    doi             = ""
    defaultBranch   = "main"
}
